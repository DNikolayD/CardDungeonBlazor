@page "/deck/addCards/{id}"
@using CardDungeonBlazor.Data;
@using CardDungeonBlazor.Models;
@using CardDungeonBlazor.Controls;
@inject ApplicationDbContext dbcontext
@inject Services.CardAddedToDeck CardsAdded

<h3>Add cards to the Deck</h3>

<div class="row">
    @foreach (var card in CardsAdded.Cards)
    {
        <div class="col-md-4">
            <div class="card mb-3">
                <img class="card-img-top" src="@card.ImageUrl" alt="@card.Name @card.CardType - @card.Value">
                <div class="card-body text-center">
                    <h5 class="card-title text-center">@card.Name @card.CardType - @card.Value</h5>
                    <div class="input-group mb-3">
                        <div class="input-group-prepend w-25">
                            <span class="input-group-text w-100" >@card.TimesAdded</span>
                        </div>
                        <button class="btn btn-success btn-lg" type="submit" @onclick="() => Add(card.Id)">Add card</button>
                    </div>
                </div>
            </div>
        </div>}
</div>

@code {
    [Parameter]
    public string Id { get; set; }
    AddCardsToDeckModel Model;
    private int count = 0;

    protected override void OnInitialized()
    {
        Model = new AddCardsToDeckModel();
        AddCardsToDeck cardsToDeck = new AddCardsToDeck();
        CardsAdded.Cards = cardsToDeck.GetAllCards(dbcontext).Cards;

    }
    void Add(string CardId)
    {
        CardsAdded.Cards.Find(x => x.Id == CardId).TimesAdded++;
        AddCardsToDeck cardsToDeck = new AddCardsToDeck();
        cardsToDeck.AddCardsToDeckWithId(dbcontext, CardId, Id);
    }

}
