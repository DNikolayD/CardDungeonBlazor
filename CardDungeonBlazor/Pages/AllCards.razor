@page "/cards/all";
@using CardDungeonBlazor.Models;
@using CardDungeonBlazor.Controls;
@inject CardDungeonBlazor.Data.ApplicationDbContext dbcontext;
@inject NavigationManager navManager;
<h3>AllCards</h3>

<div class="row">
    @foreach (var card in Model.Cards)
    {
        <div class="col-md-4">
            <div class="card mb-3">
                <img class="card-img-top" src="@card.ImageUrl" alt="@card.Name @card.CardType - @card.Value">
                <div class="card-body text-center">
                    <h5 class="card-title text-center">@card.Name @card.CardType - @card.Value</h5>
                    <a asp-controller="Cars" asp-action="Details" @onclick="() => RedirectToFullView(card.Id)" class="btn btn-primary">View More</a>
                    @if (isLoggedIn)
                    {
                        <a asp-controller="Cars" asp-action="Details" @onclick="() => Delete(card.Id)" class="btn btn-primary">Delete</a>
                        <a asp-controller="Cars" asp-action="Details" @onclick="() => RedirectToEdit(card.Id)" class="btn btn-primary">Edit</a>
                    }


                </div>
            </div>
        </div>}
</div>
<button class="btn btn-success btn-lg" type="submit" @onclick="() => Redirect()">Add card</button>


@code {
    [CascadingParameter]
    public Task<AuthenticationState> AuthenticationStateTask { get; set; }

    AllCardsViewModel Model;
    bool isLoggedIn;

    protected async override Task OnInitializedAsync()
    {
        var autenticationState = await AuthenticationStateTask;
        isLoggedIn = autenticationState.User.Identity.IsAuthenticated;
    }

    protected override void OnInitialized()
    {
        Model = new AllCardsViewModel();
        CardsControler cardsControler = new CardsControler(dbcontext);
        Model.Cards = cardsControler.GetAllCards(dbcontext).Cards;

    }

    void Redirect()
    {
        navManager.NavigateTo("/cards/add");
    }
    void RedirectToFullView(string id)
    {
        navManager.NavigateTo($"/card/show/{id}");
    }
    void RedirectToEdit(string id)
    {
        navManager.NavigateTo($"/card/edit/{id}");

    }
    void Delete(string id)
    {
        CardsControler cardsControler = new CardsControler(dbcontext);
        cardsControler.Delete(id);
        OnInitialized();
    }


}
