@page "/cards/all";
@using CardDungeonBlazor.Models;
@using CardDungeonBlazor.Controls;
@inject CardDungeonBlazor.Data.ApplicationDbContext dbcontext;
@inject NavigationManager navManager;
<h3>AllCards</h3>

<MudGrid>
    @foreach (var card in Model.Cards)
    {
        <MudItem Class="d-flex align-center justify-center mud-width-full py-8" xs=3>
            <MudCard>
                <MudCardMedia Image="@card.ImageUrl" />
                <MudCardContent>
                    <MudText Typo="Typo.h5">Card with name @card.Name</MudText>
                    <MudText Typo="Typo.body2">With a value of @card.Value @card.CardType</MudText>
                </MudCardContent>
                <MudCardActions>
                    <MudButton Variant="Variant.Text" Color="Color.Info" @onclick="() => RedirectToFullView(card.Id)">See More</MudButton>
                    <MudButton Variant="Variant.Text" Color="Color.Primary" @onclick="() => RedirectToEdit(card.Id)">Edit</MudButton>
                    <MudButton Variant="Variant.Text" Color="Color.Error" @onclick="() => Delete(card.Id)">Delete</MudButton>
                </MudCardActions>
            </MudCard>
        </MudItem>
    }
</MudGrid>
<MudButton Variant="Variant.Text" StartIcon="@Icons.Filled.Add" Color="Color.Primary" @onclick="() => Redirect()">Add</MudButton>


@code {
    [CascadingParameter]
    public Task<AuthenticationState> AuthenticationStateTask { get; set; }

    AllCardsViewModel Model;
    bool isLoggedIn;

    protected async override Task OnInitializedAsync()
    {
        var autenticationState = await AuthenticationStateTask;
        isLoggedIn = autenticationState.User.Identity.IsAuthenticated;
    }

    protected override void OnInitialized()
    {
        Model = new AllCardsViewModel();
        CardsControler cardsControler = new CardsControler(dbcontext);
        Model.Cards = cardsControler.GetAllCards(dbcontext).Cards;

    }

    void Redirect()
    {
        navManager.NavigateTo("/cards/add");
    }
    void RedirectToFullView(string id)
    {
        navManager.NavigateTo($"/card/show/{id}");
    }
    void RedirectToEdit(string id)
    {
        navManager.NavigateTo($"/card/edit/{id}");

    }
    void Delete(string id)
    {
        CardsControler cardsControler = new CardsControler(dbcontext);
        cardsControler.Delete(id);
        OnInitialized();
    }
}
